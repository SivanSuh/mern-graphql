import Head from "next/head";
import { Inter } from "next/font/google";
import { useMutation, useQuery } from "@apollo/client";
import { GET_POST } from "../graphql/query";
import { CREATE_PORT } from "../graphql/mutation";
import GetPostModel from "@/models/GetPostModel";
import Layout from "@/components/Layout";
import Card from "@/components/Card";
import React, { useEffect, useState } from "react";
import Input from "@/components/Atoms/Input";
import Button from "@/components/Atoms/Button";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [form, setForm] = useState({
    title: "",
    description: "",
  });

  const { loading, data, error } = useQuery(GET_POST);
  const [createPost] = useMutation(CREATE_PORT, {
    refetchQueries: [GET_POST, "getPost"],
  });

  useEffect(() => {}, [form, data]);

  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setForm({
      ...form,
      [e.target.name]: e.target.value,
    });
  };

  if (loading) return "Loading...";
  if (error) return `Error! ${error.message}`;

  console.log("data", data);
  console.log("form", form);
  return (
    <>
      <Head>
        <title>Graphql</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <>
        <Layout>
          <form
            onSubmit={(e: any) => {
              e.preventDefault();
              createPost({ variables: { body: form } });
              setForm({
                description: "",
                title: "",
              });
            }}
          >
            <Input
              placeholder="Add The Title"
              value={form.title}
              name="title"
              onChange={onChange}
            />
            <Input
              placeholder="Add The Description"
              value={form.description}
              name="description"
              onChange={onChange}
            />
            <Button buttonName="Create Post" type="submit" />
          </form>
          <div className="cardContainer">
            {data?.getPost?.map((item: GetPostModel) => {
              return (
                <Card
                  id={item.id}
                  key={item.id}
                  description={item.description}
                  title={item.title}
                />
              );
            })}
          </div>
        </Layout>
      </>
    </>
  );
}
